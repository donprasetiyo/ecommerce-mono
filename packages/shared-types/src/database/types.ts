import type { ColumnType } from "kysely";
export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;
export type Timestamp = ColumnType<Date, Date | string, Date | string>;

import type { UserStatus, InvoiceStatus, TransactionStatus, PaymentMethod } from "./enums";

export type Address = {
    id: Generated<string>;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    address_line_1: string | null;
    address_line_2: string | null;
    city: string | null;
    country: string | null;
    postal_code: string | null;
    user_id: string;
    landmark: string | null;
    phone_number: string | null;
};
export type Attribute = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    name: string;
};
export type AttributeValueDatetime = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    attribute_id: string;
    entity_id: string;
    value: Timestamp;
};
export type AttributeValueDecimal = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    attribute_id: string;
    entity_id: string;
    value: string;
};
export type AttributeValueInt = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    attribute_id: string;
    entity_id: string;
    value: number;
};
export type AttributeValueText = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    attribute_id: string;
    entity_id: string;
    value: string;
};
export type AttributeValueVarchar = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    attribute_id: string;
    entity_id: string;
    value: string;
};
export type Cart = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    user_id: string;
    total: number | null;
};
export type CartItem = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    cart_id: string;
    product_id: string;
    product_sku_id: string;
    quantity: number | null;
};
export type Category = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    description: string | null;
};
export type Currency = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    name: string;
    code: string;
};
export type EmailVerificationCode = {
    id: Generated<string>;
    created_at: Generated<Timestamp>;
    code: string;
    user_id: string;
    email: string;
    expires_at: Timestamp;
};
export type Entity = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    name: string;
};
export type Invoice = {
    id: Generated<string>;
    public_id: string;
    description: string | null;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    transaction_id: string;
    currency_code: string;
    customer_address_line_1: string | null;
    customer_address_line_2: string | null;
    customer_city: string | null;
    customer_country: string | null;
    customer_email: string | null;
    customer_id: string;
    customer_name: string | null;
    customer_postal_code: string | null;
    number: Generated<string>;
    total: string;
    due_date: Timestamp;
    invoice_date: Timestamp;
    paid_at: Timestamp | null;
    status: Generated<InvoiceStatus>;
    payment_method: PaymentMethod | null;
    payment_link: string;
};
export type InvoiceItem = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    name: string;
    quantity: number;
    unit_price: string;
    product_sku_id: string;
    product_id: string;
    invoice_id: string;
    amount: string;
    vat_amount: string | null;
    vat_percentage: string | null;
};
export type Metadata = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    attribute_id: string;
    data_type: string;
    is_required: boolean;
    format: string;
    is_searchable: boolean;
};
export type OrderDetail = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    user_id: string;
    transaction_id: string;
    total: number | null;
};
export type OrderItem = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    order_id: string;
    product_id: string;
    product_sku_id: string;
    quantity: number | null;
};
export type PasswordResetToken = {
    id: Generated<string>;
    token_hash: string;
    user_id: string;
    expires_at: Timestamp;
};
export type Product = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    name: string;
    description: string;
    summary: string | null;
    cover: string | null;
    category_id: string | null;
};
export type ProductAttribute = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    product_sku_id: string;
    attribute_id: string;
    value: string | null;
};
export type ProductPrice = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    from_date: Timestamp;
    to_date: Timestamp;
    price: string;
    currency_code: string;
    product_sku_id: string;
    deleted_at: Timestamp | null;
};
export type ProductSKU = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    product_id: string;
    sku: string | null;
    price: string | null;
    quantity: number | null;
};
export type Receipt = {
    id: Generated<string>;
    public_id: string;
    description: string | null;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    transaction_id: string;
    customer_address_line_1: string | null;
    customer_address_line_2: string | null;
    customer_city: string | null;
    customer_country: string | null;
    customer_email: string | null;
    customer_name: string | null;
    customer_postal_code: string | null;
    total: string;
    currency_code: string;
    customer_id: string;
    paid_at: Timestamp;
    number: Generated<string | null>;
    payment_method: PaymentMethod | null;
};
export type ReceiptItem = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    name: string;
    quantity: number;
    unit_price: string;
    receipt_id: string;
    amount: string;
    product_sku_id: string;
    vat_amount: string | null;
    vat_percentage: string | null;
    product_id: string;
};
export type Role = {
    id: Generated<string>;
    created_at: Generated<Timestamp>;
    name: string;
    description: string;
};
export type Session = {
    id: string;
    expires_at: Timestamp;
    user_id: string;
};
export type SubCategory = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    deleted_at: Timestamp | null;
    parent_id: string;
    name: string | null;
    description: string | null;
};
export type Transaction = {
    id: Generated<string>;
    public_id: string;
    amount: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    user_id: string;
    transaction_status: TransactionStatus;
    order_id: string;
};
export type User = {
    id: string;
    username: string;
    password_hash: string;
    email_verified: boolean;
    created_at: Generated<Timestamp>;
    status: Generated<UserStatus>;
    deleted_at: Timestamp | null;
    currency_code: Generated<string>;
    email: string;
    avatar: string | null;
    first_name: string | null;
    last_name: string | null;
    birth_of_date: Timestamp | null;
    phone_number: string | null;
    role_name: Generated<string>;
};
export type Wishlist = {
    id: Generated<string>;
    public_id: string;
    created_at: Generated<Timestamp>;
    updated_at: Generated<Timestamp>;
    user_id: string;
    product_id: string;
    product_sku_id: string;
};
export type DB = {
    Address: Address;
    Attribute: Attribute;
    AttributeValueDatetime: AttributeValueDatetime;
    AttributeValueDecimal: AttributeValueDecimal;
    AttributeValueInt: AttributeValueInt;
    AttributeValueText: AttributeValueText;
    AttributeValueVarchar: AttributeValueVarchar;
    Cart: Cart;
    CartItem: CartItem;
    Category: Category;
    Currency: Currency;
    EmailVerificationCode: EmailVerificationCode;
    Entity: Entity;
    Invoice: Invoice;
    InvoiceItem: InvoiceItem;
    Metadata: Metadata;
    OrderDetail: OrderDetail;
    OrderItem: OrderItem;
    PasswordResetToken: PasswordResetToken;
    Product: Product;
    ProductAttribute: ProductAttribute;
    ProductPrice: ProductPrice;
    ProductSKU: ProductSKU;
    Receipt: Receipt;
    ReceiptItem: ReceiptItem;
    Role: Role;
    Session: Session;
    SubCategory: SubCategory;
    Transaction: Transaction;
    User: User;
    Wishlist: Wishlist;
};
